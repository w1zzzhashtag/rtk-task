{"version":3,"sources":["components/Button/Button.module.scss","components/Result/Result.module.scss","app/hooks.ts","components/Question/Question.tsx","components/Result/Result.tsx","components/ChecboxField/ChecboxField.tsx","components/RadioField/RadioField.tsx","components/Button/Button.tsx","app/App.tsx","app/rootReducer.ts","app/store.ts","index.tsx","featurers/questions/questionsData.ts","featurers/questions/questionsSlice.ts","components/Question/Question.module.scss"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","Question","question","setQuestion","handleChecked","e","title","checked","target","prev","options","map","option","isMultyple","className","styles","wrapper","inner","subtitle","name","Result","dispatch","data","state","questions","Object","keys","item","Number","question__title","answers","filter","answers__item","id","handleClick","resetState","customClassName","button","ChecboxField","type","onChange","htmlFor","RadioField","value","Button","children","cn","onClick","App","currentStep","React","useState","questionOnCurrentStep","setQuestionOnCurrentStep","totalSteps","setTotalSteps","useEffect","length","every","alert","setChangedData","setNextStep","rootReducer","combineReducers","questionsSlice","store","configureStore","reducer","require","default","ReactDOM","render","StrictMode","document","getElementById","QESTIONS_DATA","1","2","3","4","5","6","7","initialState","createSlice","reducers","action","payload","actions"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,OAAS,yB,uCCA3BD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,sBAAsB,SAAW,yBAAyB,gBAAkB,gCAAgC,QAAU,wBAAwB,cAAgB,8BAA8B,OAAS,yB,0ECGpPC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,qCCkDhDC,EA7CoB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAExCC,EAAgB,SAACC,EAAwCC,GAAmB,IACxEC,EAAYF,EAAEG,OAAdD,QACRJ,GAAY,SAAAM,GAAI,kCACXA,GADW,IAEdC,QAASD,EAAKC,QAAQC,KAAI,SAAAC,GACxB,OAAIA,EAAON,QAAUA,EACZ,2BAAKM,GAAZ,IAAoBL,QAASA,IACtBL,EAASW,WACdD,EADK,2BAEAA,GAFA,IAEQL,SAAS,aAKhC,OACE,sBAAKO,UAAWC,IAAOC,QAAvB,UACE,oBAAIF,UAAWC,IAAOT,MAAtB,SAA8BJ,EAASA,WAEvC,sBAAKY,UAAWC,IAAOE,MAAvB,UACE,mBAAGH,UAAWC,IAAOG,SAArB,SACGhB,EAASW,WACN,yPACA,+JAGLX,EAASQ,QAAQC,KAAI,SAAAC,GAAM,OAAIV,EAASW,WACrC,cAAC,EAAD,CAEAP,MAAOM,EAAON,MACdC,QAASK,EAAOL,QAChBH,cAAeA,GAHVQ,EAAON,OAIZ,cAAC,EAAD,CAEAa,KAAMjB,EAASA,SACfI,MAAOM,EAAON,MACdC,QAASK,EAAOL,QAChBH,cAAeA,GAJVQ,EAAON,iB,gBCFTc,EApCU,WACvB,IAAMC,EAAWxB,IACTyB,EAASvB,GAAe,SAAAwB,GAAK,OAAIA,EAAMC,aAAvCF,KAIR,OACE,sBAAKR,UAAWC,IAAOC,QAAvB,UACE,oBAAIF,UAAWC,IAAOT,MAAtB,oIACCmB,OAAOC,KAAKJ,GACVX,KAAI,SAAAgB,GAAI,OAAIC,OAAOD,MACnBhB,KAAI,SAAAgB,GAAI,OACP,sBAAgBb,UAAWC,IAAOb,SAAlC,UACE,oBAAIY,UAAWC,IAAOc,gBAAtB,SACGP,EAAKK,GAAMzB,WAEd,qBAAKY,UAAWC,IAAOe,QAAvB,SACGR,EAAKK,GAAMjB,QAAQqB,QAAO,SAAAnB,GAAM,OAAIA,EAAOL,WAASI,KAAI,SAAAC,GAAM,OAC7D,sBAEEE,UAAWC,IAAOiB,cAFpB,SAIGpB,EAAON,OAHHM,EAAOqB,WAPVN,MAiBZ,cAAC,EAAD,CAAQO,YAzBI,kBAAMb,EAASc,gBAyBKC,gBAAiBrB,IAAOsB,OAAxD,4FCZOC,EAfwB,SAAC,GAAuC,IAArChC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASH,EAAoB,EAApBA,cACxD,OACE,sBAAKU,UAAU,iBAAf,UACE,uBACEyB,KAAK,WACLN,GAAI3B,EACJa,KAAMb,EACNC,QAASA,EACTO,UAAU,QACV0B,SAAU,SAACnC,GAAD,OAAOD,EAAcC,EAAGC,MACpC,uBAAOmC,QAASnC,EAAOQ,UAAU,eAAjC,SAAiDR,QCOxCoC,EAhBsB,SAAC,GAA6C,IAA3CvB,EAA0C,EAA1CA,KAAMb,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASH,EAAoB,EAApBA,cAC5D,OACE,sBAAKU,UAAU,iBAAf,UACE,uBACEyB,KAAK,QACLN,GAAI3B,EACJa,KAAMA,EACNwB,MAAOrC,EACPC,QAASA,EACTO,UAAU,QACV0B,SAAU,SAACnC,GAAD,OAAOD,EAAcC,EAAGC,MACpC,uBAAOmC,QAASnC,EAAOQ,UAAU,eAAjC,SAAiDR,Q,kCCAxCsC,EAVkB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUX,EAAmC,EAAnCA,YAAaE,EAAsB,EAAtBA,gBACzD,OACE,wBACEtB,UAAWgC,IAAG/B,IAAOsB,OAAQD,GAC7BW,QAASb,EAFX,SAGGW,K,MCuCQG,UA5CO,WACpB,IAAM3B,EAAWxB,IADS,EAGIE,GAAe,SAAAwB,GAAK,OAAIA,EAAMC,aAApDF,EAHkB,EAGlBA,KAAM2B,EAHY,EAGZA,YAHY,EAIgCC,IAAMC,SAA4B7B,EAAK2B,IAJvE,mBAInBG,EAJmB,KAIIC,EAJJ,OAKUH,IAAMC,SAAS,GALzB,mBAKnBG,EALmB,KAKPC,EALO,KAO1BL,IAAMM,WAAU,kBAAMH,EAAyB/B,EAAK2B,MAAe,CAAC3B,EAAM2B,IAC1EC,IAAMM,WAAU,kBAAMD,EAAc9B,OAAOC,KAAKJ,GAAMmC,UAAS,CAACnC,IAYhE,OACE,qBAAKR,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACGmC,EAAcK,EACX,cAAC,EAAD,IACAF,GAAyB,qCACzB,cAAC,EAAD,CACElD,SAAUkD,EACVjD,YAAakD,IACf,qBAAKvC,UAAU,4BAAf,SACE,cAAC,EAAD,CAAQoB,YAlBG,WAFekB,EAAsB1C,QAAQgD,OAAM,SAAA/B,GAAI,OAAKA,EAAKpB,WAGxDoD,MAAM,sIAElCtC,EAASuC,YAAeR,IACxB/B,EAASwC,iBAcD,8CAIF,sBAAK/C,UAAU,eAAf,UACGmC,EADH,IACiBK,c,uGCrCdQ,EAJKC,YAAgB,CAClCvC,UAAWwC,MCaEC,MAdDC,YAAe,CAC3BC,QAASL,I,QCCI,WACb,IAAMd,EAAMoB,EAAQ,IAAaC,QAEjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAACjB,EAAD,QAGJyB,SAASC,eAAe,SAI5BH,I,gJChBaI,EAAwD,CACnEC,EAAG,CACD1E,SAAU,oFACVQ,QAAS,CACP,CAAEuB,GAAI,EAAG3B,MAAO,KAAMC,SAAS,GAC/B,CAAE0B,GAAI,EAAG3B,MAAO,KAAMC,SAAS,GAC/B,CAAE0B,GAAI,EAAG3B,MAAO,KAAMC,SAAS,GAC/B,CAAE0B,GAAI,EAAG3B,MAAO,KAAMC,SAAS,GAC/B,CAAE0B,GAAI,EAAG3B,MAAO,KAAMC,SAAS,GAC/B,CAAE0B,GAAI,EAAG3B,MAAO,KAAMC,SAAS,GAC/B,CAAE0B,GAAI,EAAG3B,MAAO,0CAAaC,SAAS,GACtC,CAAE0B,GAAI,EAAG3B,MAAO,0CAAaC,SAAS,KAG1CsE,EAAG,CACD3E,SAAU,uGACVQ,QAAS,CACP,CAAEuB,GAAI,EAAG3B,MAAO,uCAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,wFAAmBC,SAAS,GAC5C,CAAE0B,GAAI,EAAG3B,MAAO,uCAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,yDAAaC,SAAS,GACtC,CAAE0B,GAAI,EAAG3B,MAAO,uCAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,6CAAWC,SAAS,GACpC,CAAE0B,GAAI,EAAG3B,MAAO,2BAAQC,SAAS,GACjC,CAAE0B,GAAI,EAAG3B,MAAO,qEAAeC,SAAS,KAG5CuE,EAAG,CACD5E,SAAU,kKACVQ,QAAS,CACP,CAAEuB,GAAI,EAAG3B,MAAO,gEAAeC,SAAS,GACxC,CAAE0B,GAAI,EAAG3B,MAAO,kFAAkBC,SAAS,GAC3C,CAAE0B,GAAI,EAAG3B,MAAO,4EAAiBC,SAAS,GAC1C,CAAE0B,GAAI,EAAG3B,MAAO,8FAAoBC,SAAS,GAC7C,CAAE0B,GAAI,EAAG3B,MAAO,kFAAkBC,SAAS,IAE7CM,YAAY,GAEdkE,EAAG,CACD7E,SAAU,oNACVQ,QAAS,CACP,CAAEuB,GAAI,EAAG3B,MAAO,aAAcC,SAAS,GACvC,CAAE0B,GAAI,EAAG3B,MAAO,OAAQC,SAAS,GACjC,CAAE0B,GAAI,EAAG3B,MAAO,SAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,MAAOC,SAAS,GAChC,CAAE0B,GAAI,EAAG3B,MAAO,KAAMC,SAAS,GAC/B,CAAE0B,GAAI,EAAG3B,MAAO,IAAKC,SAAS,GAC9B,CAAE0B,GAAI,EAAG3B,MAAO,MAAOC,SAAS,IAElCM,YAAY,GAEdmE,EAAG,CACD9E,SAAU,0HACVQ,QAAS,CACP,CAAEuB,GAAI,EAAG3B,MAAO,6BAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,6BAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,6BAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,6BAAUC,SAAS,GACnC,CAAE0B,GAAI,EAAG3B,MAAO,4DAAgBC,SAAS,GACzC,CAAE0B,GAAI,EAAG3B,MAAO,4DAAgBC,SAAS,KAG7C0E,EAAG,CACD/E,SAAU,uOACVQ,QAAS,CACP,CAAEuB,GAAI,EAAG3B,MAAO,8CAAiBC,SAAS,GAC1C,CAAE0B,GAAI,EAAG3B,MAAO,8CAAiBC,SAAS,GAC1C,CAAE0B,GAAI,EAAG3B,MAAO,8CAAiBC,SAAS,GAC1C,CAAE0B,GAAI,EAAG3B,MAAO,8CAAiBC,SAAS,GAC1C,CAAE0B,GAAI,EAAG3B,MAAO,mFAAwBC,SAAS,KAGrD2E,EAAG,CACDhF,SAAU,mHACVQ,QAAS,CACP,CAAEuB,GAAI,EAAG3B,MAAO,+DAAcC,SAAS,GACvC,CAAE0B,GAAI,EAAG3B,MAAO,qEAAeC,SAAS,GACxC,CAAE0B,GAAI,EAAG3B,MAAO,mDAAYC,SAAS,GACrC,CAAE0B,GAAI,EAAG3B,MAAO,yDAAaC,SAAS,GACtC,CAAE0B,GAAI,EAAG3B,MAAO,yHAA2BC,SAAS,IAEtDM,YAAY,IC9EVsE,EAA8B,CAClC7D,KAAMqD,EACN1B,YAAa,GAGTe,EAAiBoB,YAAY,CACjCjE,KAAM,YACNgE,eACAE,SAAU,CACRzB,eAAgB,SAACrC,EAAO+D,GACM/D,EAArBD,KAAqBC,EAAf0B,aACOqC,EAAOC,SAE7B1B,YAAa,SAACtC,GACZA,EAAM0B,eAERd,WAAY,SAACZ,GACXA,EAAMD,KAAOqD,EACbpD,EAAM0B,YAAc,M,EAOtBe,EAAewB,QADjB3B,E,EAAAA,YAAaD,E,EAAAA,eAAgBzB,E,EAAAA,WAEhB6B,MAAf,S,kBC/BArE,EAAOC,QAAU,CAAC,QAAU,0BAA0B,MAAQ,wBAAwB,MAAQ,wBAAwB,SAAW,8B","file":"static/js/main.258f161f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__j-cX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Result_wrapper__3fYk2\",\"title\":\"Result_title__Jm0bp\",\"question\":\"Result_question__2MItS\",\"question__title\":\"Result_question__title__1r-Ag\",\"answers\":\"Result_answers__2iAMo\",\"answers__item\":\"Result_answers__item__3z2fe\",\"button\":\"Result_button__yHPWl\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { RootState, AppDispatch } from './store'\r\n\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import React from 'react'\r\nimport { ChecboxField, RadioField } from '..'\r\nimport { QuestionsDataType } from '../../featurers/questions/questionsTypes'\r\nimport styles from './Question.module.scss'\r\n\r\ninterface IProps {\r\n  question: QuestionsDataType;\r\n  setQuestion: React.Dispatch<React.SetStateAction<QuestionsDataType>>\r\n}\r\n\r\nconst Question: React.FC<IProps> = ({ question, setQuestion }) => {\r\n  \r\n  const handleChecked = (e: React.ChangeEvent<HTMLInputElement>, title: string) => {\r\n    const { checked } = e.target\r\n    setQuestion(prev => ({\r\n      ...prev,\r\n      options: prev.options.map(option => {\r\n        if (option.title === title) {\r\n          return { ...option, checked: checked }\r\n        } return question.isMultyple\r\n          ? option\r\n          : { ...option, checked: false }\r\n      })\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1 className={styles.title}>{question.question}</h1>\r\n\r\n      <div className={styles.inner}>\r\n        <p className={styles.subtitle}>\r\n          {question.isMultyple\r\n            ? 'Выберите один или несколько вариантов ответов:'\r\n            : 'Выберите один вариант ответа:'\r\n          }\r\n        </p>\r\n        {question.options.map(option => question.isMultyple\r\n          ? <ChecboxField\r\n            key={option.title}\r\n            title={option.title}\r\n            checked={option.checked}\r\n            handleChecked={handleChecked} />\r\n          : <RadioField\r\n            key={option.title}\r\n            name={question.question}\r\n            title={option.title}\r\n            checked={option.checked}\r\n            handleChecked={handleChecked} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Question\r\n","import React from 'react'\r\nimport { Button } from '..'\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\r\nimport { resetState } from '../../featurers/questions/questionsSlice'\r\nimport styles from './Result.module.scss'\r\n\r\nconst Result: React.FC = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { data } = useAppSelector(state => state.questions)\r\n\r\n  const goToStart = () => dispatch(resetState())\r\n  \r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h1 className={styles.title}>Ваши ответы на вопросы:</h1>\r\n      {Object.keys(data)\r\n        .map(item => Number(item))\r\n        .map(item => (\r\n          <div key={item} className={styles.question}>\r\n            <h2 className={styles.question__title}>\r\n              {data[item].question}\r\n            </h2>\r\n            <div className={styles.answers}>\r\n              {data[item].options.filter(option => option.checked).map(option => (\r\n                <span\r\n                  key={option.id}\r\n                  className={styles.answers__item}\r\n                >\r\n                  {option.title}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        <Button handleClick={goToStart} customClassName={styles.button}>\r\n          Пройти еще раз\r\n        </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n  title: string;\r\n  checked: boolean;\r\n  handleChecked: (e: React.ChangeEvent<HTMLInputElement>, title: string) => void\r\n}\r\n\r\nconst ChecboxField: React.FC<IProps> = ({ title, checked, handleChecked }) => {\r\n  return (\r\n    <div className=\"field__wrapper\">\r\n      <input\r\n        type=\"checkbox\"\r\n        id={title}\r\n        name={title}\r\n        checked={checked}\r\n        className=\"field\"\r\n        onChange={(e) => handleChecked(e, title)} />\r\n      <label htmlFor={title} className=\"field__title\">{title}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChecboxField\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n  name: string;\r\n  title: string;\r\n  checked: boolean;\r\n  handleChecked: (e: React.ChangeEvent<HTMLInputElement>, title: string) => void\r\n}\r\n\r\nconst RadioField: React.FC<IProps> = ({ name, title, checked, handleChecked }) => {\r\n  return (\r\n    <div className=\"field__wrapper\">\r\n      <input\r\n        type=\"radio\"\r\n        id={title}\r\n        name={name}\r\n        value={title}\r\n        checked={checked}\r\n        className=\"field\"\r\n        onChange={(e) => handleChecked(e, title)} />\r\n      <label htmlFor={title} className=\"field__title\">{title}</label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RadioField\r\n","import React from 'react'\r\nimport cn from 'classnames'\r\nimport styles from './Button.module.scss'\r\n\r\ninterface IProps {\r\n  children: React.ReactNode\r\n  handleClick: () => void\r\n  customClassName?: string\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({ children, handleClick, customClassName }) => {\r\n  return (\r\n    <button\r\n      className={cn(styles.button, customClassName)}\r\n      onClick={handleClick}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from './hooks';\n\nimport { QuestionsDataType } from './../featurers/questions/questionsTypes'\nimport { setChangedData, setNextStep } from '../featurers/questions/questionsSlice';\nimport { Button, Question, Result } from '../components';\n\nimport './App.scss'\n\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch()\n\n  const { data, currentStep } = useAppSelector(state => state.questions)\n  const [questionOnCurrentStep, setQuestionOnCurrentStep] = React.useState<QuestionsDataType>(data[currentStep])\n  const [totalSteps, setTotalSteps] = React.useState(0)\n\n  React.useEffect(() => setQuestionOnCurrentStep(data[currentStep]), [data, currentStep])\n  React.useEffect(() => setTotalSteps(Object.keys(data).length), [data])\n\n  const nextStepIsNotAvailable = () => (questionOnCurrentStep.options.every(item => !item.checked))\n\n  const handleNextStep = () => {\n    if (nextStepIsNotAvailable()) alert('Выебрите вариант овтета!')\n    else {\n      dispatch(setChangedData(questionOnCurrentStep))\n      dispatch(setNextStep())\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        {currentStep > totalSteps\n          ? <Result />\n          : questionOnCurrentStep && <>\n            <Question\n              question={questionOnCurrentStep}\n              setQuestion={setQuestionOnCurrentStep} />\n            <div className=\"question-button__wrappper\">\n              <Button handleClick={handleNextStep}>\n                Далее\n              </Button>\n            </div>\n            <div className=\"step-counter\">\n              {currentStep}/{totalSteps}\n            </div>\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport questionsSlice from './../featurers/questions/questionsSlice'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  questions: questionsSlice\r\n})\r\n\r\nexport default rootReducer","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\r\nimport rootReducer from './rootReducer'\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n})\r\n\r\nif(process.env.NODE_ENV === 'development' && module.hot) {\r\n  module.hot.accept('./rootReducer', () => {\r\n    const newRootReducer = require('./rootReducer').default\r\n    store.replaceReducer(newRootReducer)\r\n  })\r\n}\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport type AppDispatch = typeof store.dispatch\r\nexport type thunkType = ThunkAction<void, RootState, null, Action<string>>\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\n\nconst render = () => {\n  const App = require('./app/App').default\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n}\n\nrender()\n\nif (process.env.NODE_ENV === 'development' && module.hot) {\n  module.hot.accept('./app/App', render)\n}\n\n\n","import { QuestionsDataType } from \"./questionsTypes\";\r\n\r\n\r\nexport const QESTIONS_DATA: { [index: number]: QuestionsDataType } = {\r\n  1: {\r\n    question: 'Сколько вам лет?',\r\n    options: [\r\n      { id: 1, title: '18', checked: false },\r\n      { id: 2, title: '19', checked: false },\r\n      { id: 3, title: '20', checked: false },\r\n      { id: 4, title: '21', checked: false },\r\n      { id: 5, title: '22', checked: false },\r\n      { id: 6, title: '23', checked: false },\r\n      { id: 7, title: 'Меньше 18', checked: false },\r\n      { id: 8, title: 'Больше 23', checked: false },\r\n    ],\r\n  },\r\n  2: {\r\n    question: 'Из какого вы города?',\r\n    options: [\r\n      { id: 1, title: 'Москва', checked: false },\r\n      { id: 2, title: 'Санкт-Петербург', checked: false },\r\n      { id: 3, title: 'Казань', checked: false },\r\n      { id: 4, title: 'Ульяновск', checked: false },\r\n      { id: 5, title: 'Самара', checked: false },\r\n      { id: 6, title: 'Сызрань', checked: false },\r\n      { id: 7, title: 'Сочи', checked: false },\r\n      { id: 8, title: 'Владивосток', checked: false },\r\n    ],\r\n  },\r\n  3: {\r\n    question: 'Предпочитаемый график работы?',\r\n    options: [\r\n      { id: 1, title: 'Полный день', checked: false },\r\n      { id: 2, title: 'Сменный график', checked: false },\r\n      { id: 3, title: 'Гибкий график', checked: false },\r\n      { id: 4, title: 'Удаленная работа', checked: false },\r\n      { id: 5, title: 'Вахтовый метод', checked: false },\r\n    ],\r\n    isMultyple: true,\r\n  },\r\n  4: {\r\n    question: 'Какие языки программирования вы знаете?',\r\n    options: [\r\n      { id: 1, title: 'JavaScript', checked: false },\r\n      { id: 2, title: 'Java', checked: false },\r\n      { id: 3, title: 'Python', checked: false },\r\n      { id: 4, title: 'C++', checked: false },\r\n      { id: 5, title: 'C#', checked: false },\r\n      { id: 6, title: 'C', checked: false },\r\n      { id: 7, title: 'PHP', checked: false },\r\n    ],\r\n    isMultyple: true,\r\n  },\r\n  5: {\r\n    question: 'Какой у вас опыт работы?',\r\n    options: [\r\n      { id: 1, title: '2 года', checked: false },\r\n      { id: 2, title: '3 года', checked: false },\r\n      { id: 3, title: '4 года', checked: false },\r\n      { id: 4, title: '5 года', checked: false },\r\n      { id: 5, title: 'Меньше 2 лет', checked: false },\r\n      { id: 6, title: 'Больше 5 лет', checked: false },\r\n    ],\r\n  },\r\n  6: {\r\n    question: 'На какую заработную плату вы рассчитываете?',\r\n    options: [\r\n      { id: 1, title: '40.000 рублей', checked: false },\r\n      { id: 2, title: '50.000 рублей', checked: false },\r\n      { id: 3, title: '60.000 рублей', checked: false },\r\n      { id: 4, title: '70.000 рублей', checked: false },\r\n      { id: 5, title: 'Больше 70.000 рублей', checked: false },\r\n    ],\r\n  },\r\n  7: {\r\n    question: 'Какие языка вы знаете?',\r\n    options: [\r\n      { id: 1, title: 'Английский', checked: false },\r\n      { id: 2, title: 'Французский', checked: false },\r\n      { id: 3, title: 'Японский', checked: false },\r\n      { id: 4, title: 'Китайский', checked: false },\r\n      { id: 5, title: 'Не знаю ни одного языка', checked: false },\r\n    ],\r\n    isMultyple: true,\r\n  },\r\n}","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { QESTIONS_DATA } from \"./questionsData\";\r\nimport { QuestionsDataType, QuestionsType } from \"./questionsTypes\";\r\n\r\n\r\n\r\nconst initialState: QuestionsType = {\r\n  data: QESTIONS_DATA,\r\n  currentStep: 1,\r\n}\r\n\r\nconst questionsSlice = createSlice({\r\n  name: 'questions',\r\n  initialState,\r\n  reducers: {\r\n    setChangedData: (state, action:PayloadAction<QuestionsDataType>) => {\r\n      const {data, currentStep} = state\r\n      data[currentStep] = action.payload\r\n    },\r\n    setNextStep: (state) => {\r\n      state.currentStep++\r\n    },\r\n    resetState: (state) => {\r\n      state.data = QESTIONS_DATA\r\n      state.currentStep = 1\r\n    },\r\n  }\r\n})\r\n\r\nexport const {\r\n  setNextStep, setChangedData, resetState\r\n} = questionsSlice.actions\r\nexport default questionsSlice.reducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Question_wrapper__2Ng2c\",\"title\":\"Question_title__cpL7L\",\"inner\":\"Question_inner__2d_Tp\",\"subtitle\":\"Question_subtitle__20Zj3\"};"],"sourceRoot":""}